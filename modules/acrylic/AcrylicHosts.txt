#
# IF YOU MAKE ANY CHANGES TO THIS FILE YOU HAVE TO RESTART THE ACRYLIC DNS PROXY SERVICE OR CONSOLE IN ORDER TO SEE
# THEIR EFFECTS.
#
# This is the AcrylicHosts.txt file.
#
# It contains predefined mappings between domain names and addresses the same way the native Windows HOSTS file does but
# with a few upgrades.
#
# The standard format is: IPADDRESS DOMAINNAME1 [DOMAINNAME2] [DOMAINNAME3] ...
#
# Where IPADDRESS is in dotted-quad notation for IPv4 or in colon-separated groups for IPv6 and DOMAINNAME1, DOMAINNAME2
# and DOMAINNAME3 are strings.
#
# A line starting with the '#' character (and everything after it if it's found within a line) is considered a comment
# and therefore ignored.
#
# Domain names can contain wildcard characters '*' (matches zero or more characters) and '?' (matches exactly one
# character):
#
# 127.0.0.1 ad.* ads.*
#
# Domain names can also be regular expressions if starting with a '/' character:
#
# 127.0.0.1 /^ads?\..*$
#
# Note that there's no final '/' at the end of a regular expression. More info about the regular expression engine and
# its syntax can be found at:
#
# http://www.pcre.org/
#
# A '>' character at the beginning of a domain name is a convenient shortcut for representing all domain names ending
# with what follows after that character. For example an entry like this one:
#
# 127.0.0.1 >google.com
#
# Is equivalent to:
#
# 127.0.0.1 google.com *.google.com
#
# NXDOMAIN (or negative) responses and FORWARD entries can also be mapped to domain names using all of the possibilities
# (i.e. wildcard characters & regular expressions) already explained above:
#
# NX www.google.com
# NX >google.com
# NX /^ads?\..*$
#
# FORWARD entries in particular are always evaluated first and can be used to specify exceptions to the other rules. For
# example a configuration like this:
#
# FW >apple.com
# FW >google.com
# FW >microsoft.com
# NX *
#
# Instructs Acrylic to forward to your DNS servers requests for domain names ending with "apple.com", "google.com" and
# "microsoft.com" and to return a NXDOMAIN response for all the other ones, thus effectively blocking every domain
# except the ones you explicitly allow.
#
# For easier maintenance of entries coming from multiple sources it is also possible to "include" external HOSTS files
# using the following syntax (the line must start with a '@' character followed by a space and then by a relative or an
# absolute file name):
#
# @ AcrylicHostsGroup1.txt
# @ AcrylicHostsGroup2.txt
#
# Using a large number of patterns or regular expressions may cause Acrylic to slow down significantly. From a purely
# performance perspective it is better to use a large list of domain names rather than a lot of patterns and regexes.
# Patterns and regexes should be used to ease manual maintenance when the full list of domain names is either unknown or
# too variable. A domain name is free, a pattern is relatively cheap and a regular expression is rather expensive.
#
127.0.0.1 localhost localhost.localdomain
::1 localhost localhost.localdomain

127.0.0.1 local.host *.*.*.local.host *.*.local.host *.local.host